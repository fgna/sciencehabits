{
  "name": "sciencehabits",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@headlessui/react": "^2.2.7",
    "@tailwindcss/forms": "^0.5.10",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^13.5.0",
    "ajv": "^8.17.1",
    "dexie": "^4.0.11",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-i18next": "^15.6.1",
    "react-markdown": "^10.1.0",
    "react-router-dom": "^7.8.0",
    "react-scripts": "5.0.1",
    "remark-gfm": "^4.0.1",
    "web-vitals": "^2.1.4",
    "zustand": "^5.0.7"
  },
  "scripts": {
    "start": "react-scripts start",
    "start:with-validation": "npm run validate-content && react-scripts start",
    "build": "npm run bundle-content && npm run validate-content && react-scripts build",
    "bundle-content": "node scripts/bundle-content-vercel.js",
    "test": "react-scripts test --watchAll=false",
    "test:watch": "react-scripts test",
    "test:coverage": "react-scripts test --coverage --watchAll=false",
    "test:a11y": "react-scripts test --testMatch='**/*a11y*' --watchAll=false",
    "test:integration": "react-scripts test --testMatch='**/integration/**/*.test.ts' --watchAll=false --coverage",
    "test:integration:watch": "react-scripts test --testMatch='**/integration/**/*.test.ts'",
    "verify-env": "node scripts/verify-env.js",
    "test:smoke": "cypress run --spec 'cypress/e2e/smoke-tests/*.cy.ts'",
    "eject": "react-scripts eject",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "type-check": "tsc --noEmit",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "cypress:run:component": "cypress run --component",
    "validate-content": "node scripts/validate-content.js",
    "test:system": "node tests/system/goal-selection.test.js",
    "test:system:onboarding": "node tests/system/onboarding-flow.test.js",
    "test:system:habits": "node tests/system/habit-loading.test.js",
    "test:system:deployment": "node tests/system/production-validation.test.js",
    "test:system:report": "node scripts/generate-test-report.js",
    "test:production:validate": "PRODUCTION_URL=${PRODUCTION_URL:-https://sciencehabits.vercel.app} node tests/system/production-validation.test.js",
    "start:test": "BROWSER=none npm start",
    "validate-goal-mappings": "node scripts/validate-goal-mappings.js",
    "validate:backup": "node scripts/test-backup-restore.js",
    "validate:comprehensive": "node scripts/comprehensive-validation.js",
    "validate:precommit": "node scripts/pre-commit-validation.js",
    "setup-git-hooks": "bash scripts/setup-git-hooks.sh",
    "test-recommendations": "node scripts/test-smart-recommendations.js",
    "migrate-content": "node -e \"require('./src/services/contentMigration.ts').default.migrateAllContent({ dryRun: false }).then(r => console.log('Migration:', r.success))\"",
    "migrate-content-dry": "node -e \"require('./src/services/contentMigration.ts').default.migrateAllContent({ dryRun: true }).then(r => console.log('Dry run:', r.success))\"",
    "content-report": "node scripts/generate-content-report.js",
    "dev": "npm run validate-content && react-scripts start",
    "precommit": "npm run lint && npm run type-check && npm run validate-goal-mappings && npm run test:coverage",
    "test:goal-selection": "npm run test:system",
    "test:api-integration": "node tests/integration/content-api.test.js",
    "test:multilingual": "node tests/multilingual/system-validation.test.js",
    "test:lang:en": "node -e \"require('./tests/multilingual/system-validation.test.js')\"",
    "test:lang:de": "LANG=de node -e \"require('./tests/multilingual/system-validation.test.js')\"",
    "test:lang:fr": "LANG=fr node -e \"require('./tests/multilingual/system-validation.test.js')\"",
    "test:lang:es": "LANG=es node -e \"require('./tests/multilingual/system-validation.test.js')\"",
    "validate:translations": "node scripts/validate-translations.js",
    "test:post-deployment": "node scripts/deployment-validation.js",
    "validate:production": "node scripts/deployment-validation.js https://sciencehabits.vercel.app",
    "deploy:staging": "echo 'Deploy to staging would go here'",
    "lighthouse": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "analyze": "npm run build && npx webpack-bundle-analyzer build/static/js/*.js",
    "test:all": "npm run test:coverage && npm run test:integration && npm run test:system && npm run test:multilingual",
    "ci:validation": "npm run test:all && npm run lighthouse && npm run validate:translations"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@cypress/code-coverage": "^3.14.5",
    "@types/jest-axe": "^3.5.9",
    "@types/node": "^24.2.1",
    "@types/react": "^19.1.9",
    "@types/react-dom": "^19.1.7",
    "@types/testing-library__jest-dom": "^5.14.9",
    "axios": "^1.11.0",
    "cypress": "^13.17.0",
    "cypress-axe": "^1.6.0",
    "fake-indexeddb": "^6.1.0",
    "jest-axe": "^8.0.0",
    "jest-environment-jsdom": "^29.7.0",
    "lighthouse": "^12.8.1",
    "playwright": "^1.54.2",
    "puppeteer": "^24.16.2",
    "typescript": "^4.9.5",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*.d.ts",
      "!src/index.tsx",
      "!src/reportWebVitals.ts",
      "!src/setupTests.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "transformIgnorePatterns": [
      "node_modules/(?!(react-markdown|remark-gfm|unified|bail|is-plain-obj|trough|vfile|unist-util-stringify-position|markdown-table|mdast-util-from-markdown|mdast-util-to-string|micromark|decode-named-character-reference|character-entities|property-information|hast-util-whitespace|space-separated-tokens|comma-separated-tokens|pretty-bytes)/)"
    ]
  }
}
