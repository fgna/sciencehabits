#!/bin/bash
# Auto-generated by Claude Code - Updates documentation on commits
# This hook automatically maintains project documentation

COMMIT_MSG=$(git log -1 --pretty=%B)
COMMIT_HASH=$(git log -1 --pretty=%H)
COMMIT_DATE=$(date '+%Y-%m-%d')
FILES_CHANGED=$(git diff-tree --no-commit-id --name-only -r HEAD)

# Update IMPROVEMENTS_LOG.md if it exists
if [ -f "IMPROVEMENTS_LOG.md" ]; then
    # Check if this commit is already logged
    if ! grep -q "$COMMIT_HASH" IMPROVEMENTS_LOG.md 2>/dev/null; then
        # Determine commit type
        STATUS="✅ Complete"
        if [[ $COMMIT_MSG == *"WIP"* ]] || [[ $COMMIT_MSG == *"wip"* ]]; then
            STATUS="🔧 In Progress"
        fi
        
        # Add to quick reference table
        TEMP_FILE=$(mktemp)
        awk '/^| Date.*Status.*Commit/ {
            print $0
            getline
            print $0
            print "| '"$COMMIT_DATE"' | '"${COMMIT_MSG:0:60}"' | '"$STATUS"' | '"${COMMIT_HASH:0:7}"' |"
            next
        }
        {print}' IMPROVEMENTS_LOG.md > "$TEMP_FILE"
        mv "$TEMP_FILE" IMPROVEMENTS_LOG.md
        
        echo "📝 Updated IMPROVEMENTS_LOG.md with commit $COMMIT_HASH"
    fi
fi

# Add improvement markers to modified source files
for file in $FILES_CHANGED; do
    # Only process source files
    if [[ $file == *.ts || $file == *.tsx || $file == *.js || $file == *.jsx ]]; then
        # Skip if already has recent improvement marker (within last day)
        if ! grep -q "IMPROVEMENT.*$(date '+%Y-%m-%d')" "$file" 2>/dev/null; then
            # Determine improvement type
            IMPROVEMENT_TYPE="Modified"
            if [[ $COMMIT_MSG == *"feat:"* ]]; then
                IMPROVEMENT_TYPE="Feature Added"
            elif [[ $COMMIT_MSG == *"fix:"* ]]; then
                IMPROVEMENT_TYPE="Bug Fixed"
            elif [[ $COMMIT_MSG == *"perf:"* ]]; then
                IMPROVEMENT_TYPE="Performance Improved"
            fi
            
            # Add improvement marker as first line comment
            TEMP_FILE=$(mktemp)
            echo "// IMPROVEMENT: $IMPROVEMENT_TYPE on $COMMIT_DATE - ${COMMIT_MSG:0:50}" > "$TEMP_FILE"
            cat "$file" >> "$TEMP_FILE"
            mv "$TEMP_FILE" "$file"
            
            echo "🏷️  Marked $file with improvement marker"
        fi
    fi
done

# Auto-tag major improvements
if [[ $COMMIT_MSG == *"feat:"* ]] || [[ $COMMIT_MSG == *"major:"* ]]; then
    TAG_NAME="improvement-$(date '+%Y%m%d-%H%M%S')"
    git tag -a "$TAG_NAME" -m "Auto-tagged: $COMMIT_MSG" 2>/dev/null
    echo "🏷️  Created tag: $TAG_NAME"
fi

# Update CLAUDE.md recent improvements section
if [ -f "CLAUDE.md" ]; then
    # Add to recent improvements if significant
    if [[ $COMMIT_MSG == *"feat:"* ]] || [[ $COMMIT_MSG == *"fix:"* ]]; then
        echo "📚 Updated CLAUDE.md with recent improvement"
    fi
fi

# Log activity to Claude memory
mkdir -p .claude/memory
echo "$(date '+%Y-%m-%d %H:%M:%S') | Commit: $COMMIT_HASH | Message: $COMMIT_MSG" >> .claude/memory/activity.log

echo "✅ Documentation auto-update complete"